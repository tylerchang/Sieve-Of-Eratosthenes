{"ast":null,"code":"var _jsxFileName = \"/Users/tylerchang/Desktop/Code/React/sieve-of-eratosthenes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport NumberSquare from './components/NumberSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [size, setSize] = useState();\n  const [array, setArray] = useState([]);\n  const [status, setStatus] = useState(false);\n\n  const generatePrimes = n => {\n    let a = [],\n        counter = 0;\n\n    for (let i = 0; i <= n; i++) a.push(true);\n\n    a[0] = false;\n    a[1] = false;\n\n    for (let i = 2; i <= Math.sqrt(n); i++) {\n      if (a[i] === true) {\n        counter = 0;\n\n        for (let j = i * i; j <= n; j = i * i + counter * i) {\n          a[j] = false;\n          counter++;\n        }\n      }\n    }\n\n    return a;\n  };\n\n  const start = () => {\n    if (typeof parseInt(size) === 'number') {\n      let primes = generatePrimes(size);\n      setArray(primes);\n      setStatus(true);\n    }\n  };\n\n  const reset = () => {\n    setStatus(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headers\",\n      children: \"Sieve of Eratosthenes Prime Number Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: size,\n        onChange: e => setSize(e.target.value),\n        placeholder: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"generate_button\",\n        onClick: start,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset_button\",\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: array.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(NumberSquare, {\n            number: index,\n            prime: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this), !status && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Please enter how many prime numbers you want to find \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6Sf0StMMO+ThYAvSjBq7IR0EKwE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tylerchang/Desktop/Code/React/sieve-of-eratosthenes/src/App.js"],"names":["React","useState","NumberSquare","App","size","setSize","array","setArray","status","setStatus","generatePrimes","n","a","counter","i","push","Math","sqrt","j","start","parseInt","primes","reset","e","target","value","map","index"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport NumberSquare from './components/NumberSquare';\n\n\nconst App = () => {\n\n  const [size, setSize] = useState();\n  const [array, setArray] = useState([]);\n  const [status, setStatus] = useState(false);\n\n\n  const generatePrimes = (n) => {\n    let a = [],\n      counter = 0;\n\n    for (let i = 0; i <= n; i++) a.push(true);\n\n    a[0] = false;\n    a[1] = false;\n\n    for (let i = 2; i <= Math.sqrt(n); i++) {\n      if (a[i] === true) {\n        counter = 0;\n        for (let j = i * i; j <= n; j = (i * i) + (counter * i)) {\n          a[j] = false;\n          counter++;\n        }\n      }\n    }\n\n    return a;\n  };\n\n  const start = () => {\n    if (typeof parseInt(size) === 'number') {\n      let primes = generatePrimes(size);\n      setArray(primes);\n      setStatus(true);\n    }\n  }\n\n  const reset = () => {\n    setStatus(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"headers\">\n        Sieve of Eratosthenes Prime Number Generator\n      </div>\n      <div className=\"inputs\">\n        <input type=\"text\" value={size} onChange={e => setSize(e.target.value)} placeholder=\"hello\" />\n        <button className=\"generate_button\" onClick={start}>Generate</button>\n        <button className=\"reset_button\" onClick={reset}>Reset</button>\n      </div>\n      <div className=\"container\">\n\n        {status && <div className=\"body\">\n          {array.map((value, index) => {\n            return (<NumberSquare number={index} prime={value} />)\n          })}\n        </div>}\n\n        {!status && <div> Please enter how many prime numbers you want to find </div>}\n\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}