{"ast":null,"code":"var _jsxFileName = \"/Users/tylerchang/Desktop/Code/React/sieve-of-eratosthenes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport NumberSquare from './components/NumberSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [gridSize, setGridSize] = useState(0);\n  const [grid, setGrid] = useState(new Array(gridSize));\n\n  const generateGrid = () => {\n    for (let i = 0; i < gridSize.length; i++) {\n      setGrid(ar => [...ar, i]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headers\",\n      children: \"Sieve of Eratosthenes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: gridSize,\n        onChange: e => setGridSize(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"GenerateButton\",\n        onClick: generateGrid,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: grid.map((_, index) => {\n        return /*#__PURE__*/_jsxDEV(NumberSquare, {\n          number: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"9k9rGrUfRk7BLsjD5M+/T66XsF0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tylerchang/Desktop/Code/React/sieve-of-eratosthenes/src/App.js"],"names":["React","useState","NumberSquare","App","gridSize","setGridSize","grid","setGrid","Array","generateGrid","i","length","ar","e","target","value","map","_","index"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAGhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAIO,KAAJ,CAAUJ,QAAV,CAAD,CAAhC;;AAGA,QAAMK,YAAY,GAAG,MAAM;AAEzB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,QAAQ,CAACO,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCH,MAAAA,OAAO,CAACK,EAAE,IAAI,CAAC,GAAGA,EAAJ,EAAQF,CAAR,CAAP,CAAP;AACD;AAEF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAEN,QAA5B;AAAsC,QAAA,QAAQ,EAAES,CAAC,IAAIR,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAAhE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAEN,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eASE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACGH,IAAI,CAACU,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACtB,4BAAQ,QAAC,YAAD;AAAc,UAAA,MAAM,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAAR;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAlCD;;GAAMf,G;;KAAAA,G;AAoCN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport NumberSquare from './components/NumberSquare';\n\n\nconst App = () => {\n\n\n  const [gridSize, setGridSize] = useState(0)\n  const [grid, setGrid] = useState(new Array(gridSize))\n\n\n  const generateGrid = () => {\n\n    for (let i = 0; i < gridSize.length; i++) {\n      setGrid(ar => [...ar, i])\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"headers\">\n        Sieve of Eratosthenes\n      </div>\n      <div className=\"inputs\">\n        <input type=\"number\" value={gridSize} onChange={e => setGridSize(e.target.value)} />\n        <button className=\"GenerateButton\" onClick={generateGrid}>Generate</button>\n\n      </div>\n      <div className=\"grid\">\n        {grid.map((_, index) => {\n          return (<NumberSquare number={index} />)\n        })}\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}